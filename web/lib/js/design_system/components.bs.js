// Generated by BUCKLESCRIPT VERSION 6.0.2, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Infix = require("../utils/infix.bs.js");
var React = require("react");
var Package = require("../model/package.bs.js");

var style = {
  fontFamily: "Helvetica Neue, Helvetica, sans-serif",
  fontSize: "12px",
  padding: "5px",
  borderRadius: "5px"
};

function Components$Label(Props) {
  var children = Props.children;
  return React.createElement("span", {
              style: style
            }, children);
}

var Label = /* module */[
  /* style */style,
  /* make */Components$Label
];

var style$1 = {
  border: "0",
  fontFamily: "Helvetica Neue, Helvetica, sans-serif",
  fontSize: "24px",
  margin: "0",
  outline: "0",
  padding: "20px",
  width: "100%"
};

function Components$Search(Props) {
  var onChange = Props.onChange;
  return React.createElement("input", {
              style: style$1,
              placeholder: "Package name...",
              onChange: (function (e) {
                  return Curry._1(onChange, e.target.value);
                })
            });
}

var Search = /* module */[
  /* style */style$1,
  /* make */Components$Search
];

var style$2 = {
  background: "#F9F9F9",
  listStyle: "none",
  margin: "10px",
  padding: "20px",
  borderRadius: "6px"
};

function Components$Package(Props) {
  var pkg = Props.pkg;
  return React.createElement("li", {
              style: style$2
            }, React.createElement("b", undefined, pkg[/* name */0]), React.createElement(Components$Label, {
                  children: Package.Target[/* to_string */1](pkg[/* target */4])
                }), React.createElement("br", undefined), Infix.$$Option[/* <|> */0](pkg[/* description */1], "no description"));
}

var Package$1 = /* module */[
  /* style */style$2,
  /* make */Components$Package
];

var style$3 = {
  padding: "0",
  width: "70%"
};

function Components$Pkg_list(Props) {
  var index = Props.index;
  var match = React.useState((function () {
          return "";
        }));
  var setFilter = match[1];
  var filter = match[0];
  console.log(index);
  var pkgs = filter === "" ? index[/* packages */1] : List.filter((function (pkg) {
              var pattern = new RegExp(filter);
              if (pattern.test(pkg[/* name */0])) {
                return true;
              } else {
                var match = pkg[/* description */1];
                if (match !== undefined ? pattern.test(match) : true) {
                  return true;
                } else {
                  return pattern.test(Package.Target[/* to_string */1](pkg[/* target */4]));
                }
              }
            }))(index[/* packages */1]);
  return React.createElement("div", undefined, React.createElement(Components$Search, {
                  onChange: Curry.__1(setFilter)
                }), React.createElement("ul", {
                  style: style$3
                }, $$Array.of_list(List.map((function (pkg) {
                            return React.createElement(Components$Package, {
                                        pkg: pkg
                                      });
                          }), pkgs))));
}

var Pkg_list = /* module */[
  /* style */style$3,
  /* make */Components$Pkg_list
];

exports.Label = Label;
exports.Search = Search;
exports.Package = Package$1;
exports.Pkg_list = Pkg_list;
/* react Not a pure module */
