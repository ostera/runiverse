name: $(Build.BuildId)

# Trigger on pushes to master and tags
trigger:
  branches:
    include:
      - master
      - refs/tags/*

# Trigger on PRs against master
pr:
  branches:
    include:
      - master

# Trigger every 2 hours
schedules:
- cron: '0 */2 * * *'
  displayName: Bi-hourly build
  branches:
    include:
    - master
  always: true

stages:
  - stage: Build_platforms
    jobs:
      - template: .ci/build-platform.yml
        parameters:
          platform: Linux
          vmImage: ubuntu-16.04
          STAGING_DIRECTORY: /home/vsts/STAGING
          STAGING_DIRECTORY_UNIX: /home/vsts/STAGING
          ESY__CACHE_INSTALL_PATH: /home/vsts/.esy/3_____________________________________________________________________/i
          ESY__CACHE_SOURCE_TARBALL_PATH: /home/vsts/.esy/source/i

      - template: .ci/build-platform.yml
        parameters:
          platform: macOS
          vmImage: macOS-latest
          STAGING_DIRECTORY: /Users/vsts/STAGING
          STAGING_DIRECTORY_UNIX: /Users/vsts/STAGING
          ESY__CACHE_INSTALL_PATH: /Users/vsts/.esy/3____________________________________________________________________/i
          ESY__CACHE_SOURCE_TARBALL_PATH: /Users/vsts/.esy/source/i

      # - template: .ci/build-platform.yml
      #   parameters:
      #     platform: Windows
      #     vmImage: vs2017-win2016
      #     STAGING_DIRECTORY: C:\Users\VssAdministrator\STAGING
      #     STAGING_DIRECTORY_UNIX: C:\Users\VssAdministrator\STAGING
      #     ESY__CACHE_INSTALL_PATH: /C/Users/VssAdministrator/.esy/3_/i
      #     ESY__CACHE_SOURCE_TARBALL_PATH: /C/Users/VssAdministrator/.esy/source/i

  - stage: Create_release
    dependsOn: [Build_platforms]
    jobs:
    - job: Release
      displayName: Release
      pool:
        vmImage: ubuntu-16.04
      steps:
        - template: .ci/cross-release.yml

  - stage: Build_package_index
    dependsOn: [Create_release]
    jobs:
    - job: BuildPackageIndexOsX
      displayName: Build package-index on osX
      pool:
        vmImage: macOS-latest
      steps:
        - template: .ci/build-package-index.yml

  - stage: Build_web
    dependsOn: []
    jobs:
      - job: BuildWeb
        displayName: Build web site
        pool:
          vmImage: macOS-latest
        steps:
          - template: .ci/build-web.yml

  - stage: Publish_npm
    dependsOn: [Create_release, Build_package_index]
    condition: and(succeeded(), and(ne(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.Reason'], 'Schedule')))
    jobs:
      - deployment:
        pool:
          vmImage: macOS-latest
        environment: npm-registry
        strategy:
          runOnce:
            deploy:
              steps:
              - task: DownloadPipelineArtifact@0
                displayName: "Download Release Artifacts"
                inputs:
                  artifactName: Release
                  targetPath: $(Build.StagingDirectory)
              
              - script: echo 'TODO - Implement release to npm on new tag'
                displayName: "Publish to NPM registry"

  - stage: Deploy_web
    dependsOn: [Build_package_index, Build_web]
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
    - deployment: DeployWeb
      pool:
        vmImage: macOS-latest
      environment: github-pages
      strategy:
        runOnce:
          deploy:
            steps:
            - script: git clone https://$(github_pat)@github.com/reuniverse/reuniverse.github.io.git .
              workingDirectory: $(Build.StagingDirectory)
              displayName: "Clone GitHub pages repo"

            - task: DownloadPipelineArtifact@0
              displayName: "Download website"
              inputs:
                artifactName: website
                targetPath: $(Build.StagingDirectory)

            - task: DownloadPipelineArtifact@0
              displayName: "Download package-index-json"
              inputs:
                artifactName: package-index-json
                targetPath: $(Build.StagingDirectory)/packages

            - script: |
                git config user.name "SRC Bot"
                git add --all
                git commit --message "Autodeploy: $(Build.BuildNumber)

                Pipeline Run: https://dev.azure.com/reuniverse/reuniverse/_build/results?buildId=$(Build.BuildNumber)"
                git push origin master
              workingDirectory: $(Build.StagingDirectory)
              displayName: "Publish to GitHub pages"
